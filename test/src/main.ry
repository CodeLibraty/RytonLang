module import {
    std.Core.stdTypes
    std.Core.stdModifiers
    std.Core.stdFunctions
    std.Shell
    std.Files
    std.Info
    std.Paths
    std.fStrings
}

struct myStruct {
    x: Int,
    y: Int,
    z: Int = 10,
}

enum Status {
    Success,
    Error,
    
    func isOk: Bool => output this == Success
    func message: String {
        switch this {
            case Success => output "Operation completed"
            case Error => output "Operation failed"
        }
    }
}

func Main {
    def stat:Status = Success
    stat.message().print() 

    def myStruct = newmyStruct(x = 10, y = 20)
    print(myStruct.x)
    print(myStruct.y)
    print(myStruct.z)
}

</ planed syntax
    func main[T](@staticArg: Int, ->refArg: String, def myGeneric: T) {}

    <Array:private `inline`> def myArray = ["Hello", "World"]
/>
